// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-openshift-apiserver-operator/pkg/apis/openshiftapiserver/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KubeApiserverOperatorConfigLister helps list KubeApiserverOperatorConfigs.
type KubeApiserverOperatorConfigLister interface {
	// List lists all KubeApiserverOperatorConfigs in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KubeApiserverOperatorConfig, err error)
	// Get retrieves the KubeApiserverOperatorConfig from the index for a given name.
	Get(name string) (*v1alpha1.KubeApiserverOperatorConfig, error)
	KubeApiserverOperatorConfigListerExpansion
}

// kubeApiserverOperatorConfigLister implements the KubeApiserverOperatorConfigLister interface.
type kubeApiserverOperatorConfigLister struct {
	indexer cache.Indexer
}

// NewKubeApiserverOperatorConfigLister returns a new KubeApiserverOperatorConfigLister.
func NewKubeApiserverOperatorConfigLister(indexer cache.Indexer) KubeApiserverOperatorConfigLister {
	return &kubeApiserverOperatorConfigLister{indexer: indexer}
}

// List lists all KubeApiserverOperatorConfigs in the indexer.
func (s *kubeApiserverOperatorConfigLister) List(selector labels.Selector) (ret []*v1alpha1.KubeApiserverOperatorConfig, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KubeApiserverOperatorConfig))
	})
	return ret, err
}

// Get retrieves the KubeApiserverOperatorConfig from the index for a given name.
func (s *kubeApiserverOperatorConfigLister) Get(name string) (*v1alpha1.KubeApiserverOperatorConfig, error) {
	obj, exists, err := s.indexer.GetByKey(name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("kubeapiserveroperatorconfig"), name)
	}
	return obj.(*v1alpha1.KubeApiserverOperatorConfig), nil
}
