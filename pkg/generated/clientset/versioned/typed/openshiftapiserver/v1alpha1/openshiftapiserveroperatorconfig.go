// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-openshift-apiserver-operator/pkg/apis/openshiftapiserver/v1alpha1"
	scheme "github.com/openshift/cluster-openshift-apiserver-operator/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// OpenShiftAPIServerOperatorConfigsGetter has a method to return a OpenShiftAPIServerOperatorConfigInterface.
// A group's client should implement this interface.
type OpenShiftAPIServerOperatorConfigsGetter interface {
	OpenShiftAPIServerOperatorConfigs() OpenShiftAPIServerOperatorConfigInterface
}

// OpenShiftAPIServerOperatorConfigInterface has methods to work with OpenShiftAPIServerOperatorConfig resources.
type OpenShiftAPIServerOperatorConfigInterface interface {
	Create(*v1alpha1.OpenShiftAPIServerOperatorConfig) (*v1alpha1.OpenShiftAPIServerOperatorConfig, error)
	Update(*v1alpha1.OpenShiftAPIServerOperatorConfig) (*v1alpha1.OpenShiftAPIServerOperatorConfig, error)
	UpdateStatus(*v1alpha1.OpenShiftAPIServerOperatorConfig) (*v1alpha1.OpenShiftAPIServerOperatorConfig, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string, options v1.GetOptions) (*v1alpha1.OpenShiftAPIServerOperatorConfig, error)
	List(opts v1.ListOptions) (*v1alpha1.OpenShiftAPIServerOperatorConfigList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error)
	OpenShiftAPIServerOperatorConfigExpansion
}

// openShiftAPIServerOperatorConfigs implements OpenShiftAPIServerOperatorConfigInterface
type openShiftAPIServerOperatorConfigs struct {
	client rest.Interface
}

// newOpenShiftAPIServerOperatorConfigs returns a OpenShiftAPIServerOperatorConfigs
func newOpenShiftAPIServerOperatorConfigs(c *OpenshiftapiserverV1alpha1Client) *openShiftAPIServerOperatorConfigs {
	return &openShiftAPIServerOperatorConfigs{
		client: c.RESTClient(),
	}
}

// Get takes name of the openShiftAPIServerOperatorConfig, and returns the corresponding openShiftAPIServerOperatorConfig object, and an error if there is any.
func (c *openShiftAPIServerOperatorConfigs) Get(name string, options v1.GetOptions) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfig{}
	err = c.client.Get().
		Resource("openshiftapiserveroperatorconfigs").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of OpenShiftAPIServerOperatorConfigs that match those selectors.
func (c *openShiftAPIServerOperatorConfigs) List(opts v1.ListOptions) (result *v1alpha1.OpenShiftAPIServerOperatorConfigList, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfigList{}
	err = c.client.Get().
		Resource("openshiftapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested openShiftAPIServerOperatorConfigs.
func (c *openShiftAPIServerOperatorConfigs) Watch(opts v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("openshiftapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a openShiftAPIServerOperatorConfig and creates it.  Returns the server's representation of the openShiftAPIServerOperatorConfig, and an error, if there is any.
func (c *openShiftAPIServerOperatorConfigs) Create(openShiftAPIServerOperatorConfig *v1alpha1.OpenShiftAPIServerOperatorConfig) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfig{}
	err = c.client.Post().
		Resource("openshiftapiserveroperatorconfigs").
		Body(openShiftAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// Update takes the representation of a openShiftAPIServerOperatorConfig and updates it. Returns the server's representation of the openShiftAPIServerOperatorConfig, and an error, if there is any.
func (c *openShiftAPIServerOperatorConfigs) Update(openShiftAPIServerOperatorConfig *v1alpha1.OpenShiftAPIServerOperatorConfig) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfig{}
	err = c.client.Put().
		Resource("openshiftapiserveroperatorconfigs").
		Name(openShiftAPIServerOperatorConfig.Name).
		Body(openShiftAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *openShiftAPIServerOperatorConfigs) UpdateStatus(openShiftAPIServerOperatorConfig *v1alpha1.OpenShiftAPIServerOperatorConfig) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfig{}
	err = c.client.Put().
		Resource("openshiftapiserveroperatorconfigs").
		Name(openShiftAPIServerOperatorConfig.Name).
		SubResource("status").
		Body(openShiftAPIServerOperatorConfig).
		Do().
		Into(result)
	return
}

// Delete takes name of the openShiftAPIServerOperatorConfig and deletes it. Returns an error if one occurs.
func (c *openShiftAPIServerOperatorConfigs) Delete(name string, options *v1.DeleteOptions) error {
	return c.client.Delete().
		Resource("openshiftapiserveroperatorconfigs").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *openShiftAPIServerOperatorConfigs) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	return c.client.Delete().
		Resource("openshiftapiserveroperatorconfigs").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched openShiftAPIServerOperatorConfig.
func (c *openShiftAPIServerOperatorConfigs) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.OpenShiftAPIServerOperatorConfig, err error) {
	result = &v1alpha1.OpenShiftAPIServerOperatorConfig{}
	err = c.client.Patch(pt).
		Resource("openshiftapiserveroperatorconfigs").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
